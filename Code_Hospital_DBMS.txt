Create Table Doctor(
    D_ID NUMBER(10),
    D_NAME VARCHAR(20),
    D_SEX VARCHAR(2),
    D_TEL VARCHAR(10),
    D_CITY VARCHAR(20),
    SPECIALISATION VARCHAR(50),
    D_FEES NUMBER(10),
    CONSTRAINT PK_DOCTOR PRIMARY KEY(D_ID)
);
INSERT INTO Doctor VALUES(10001, 'John Smith', 'M', '1234567890', 'New York', 'Cardiology', 500);
INSERT INTO Doctor VALUES(10002, 'Jane Doe', 'F', '9876543210', 'Florida', 'Pediatrics', 400);
INSERT INTO Doctor VALUES(10003, 'David Lee', 'M', '5555555555', 'Houston', 'Dermatology', 600);
INSERT INTO Doctor VALUES(10004, 'Emily Chen', 'F', '1111111111', 'Chicago', 'Oncology', 700);
INSERT INTO Doctor VALUES(10005, 'Michael Nguyen', 'M', '2222222222', 'Houston', 'Neurology', 800);

--select*from Doctor;

CREATE TABLE NURSE
( N_ID NUMBER (5),
N_NAME VARCHAR (20),
N_SEX VARCHAR (2),
N_TEL NUMBER (10),
N_CITY VARCHAR (20),
N_SALARY NUMBER (10),
D_ID NUMBER (10),
CONSTRAINT PK_NURSE PRIMARY KEY (N_ID), CONSTRAINT FK_NURSE FOREIGN
KEY(D_ID) REFERENCES DOCTOR);

INSERT INTO NURSE VALUES(1, 'Jane', 'F', 5551234, 'New York', 50000, 10001);
INSERT INTO NURSE VALUES(2, 'John', 'M', 5554321, 'Los Angeles', 60000, 10002);
INSERT INTO NURSE VALUES(3, 'Mary', 'F', 5555678, 'Chicago', 55000, 10003);
INSERT INTO NURSE VALUES(4, 'David', 'M', 5558765, 'Houston', 65000, 10004);
INSERT INTO NURSE VALUES(5, 'Sara', 'F', 5559876, 'New Jersey', 55000, 10005);

--select*from NURSE;

CREATE TABLE RECEPTION
( R_ID NUMBER (5),
R_NAME VARCHAR (20),
R_TEL NUMBER (10),
CONSTRAINT PK_RECEPTION PRIMARY KEY(R_ID));

INSERT INTO RECEPTION VALUES(1, 'Alice', 5551111);
INSERT INTO RECEPTION VALUES(2, 'Bob', 5554321);
INSERT INTO RECEPTION VALUES(3, 'Charlie', 5555678);
INSERT INTO RECEPTION VALUES(4, 'David', 5558765);
INSERT INTO RECEPTION VALUES(5, 'Emily', 5559876);

select*from RECEPTION;

CREATE TABLE patient (
    P_ID NUMBER (20),
    P_NAME VARCHAR (20),
    P_AGE NUMBER (20),
    P_SEX VARCHAR (20),
    P_TEL NUMBER (20),
    P_CITY VARCHAR (20),
    D_ID NUMBER (20), 
    R_ID NUMBER (20),
    TOKEN_NO NUMBER (20),
    CONSTRAINT PK_PATIENT PRIMARY  KEY(P_ID),
CONSTRAINT FK_P1 FOREIGN KEY(D_ID) REFERENCES DOCTOR(D_ID),
CONSTRAINT FK_P2 FOREIGN KEY(R_ID) REFERENCES RECEPTION(R_ID));


INSERT INTO patient VALUES(11, 'Alice', 30, 'F', 5551234, 'New York', 10001, 1, 123);
INSERT INTO patient VALUES(12, 'Bob', 45, 'M', 5554321, 'Los Angeles', 10002, 2, 456);
INSERT INTO patient VALUES(13, 'Charlie', 60, 'M', 5555678, 'Chicago', 10003, 3, 789);
INSERT INTO patient VALUES(14, 'David', 25, 'M', 5558765, 'Houston', 10004, 4, 101112);
INSERT INTO patient VALUES(15, 'Emily', 35, 'F', 5559876, 'Philadelphia', 10001, 5, 131415);
INSERT INTO patient VALUES(16, 'Frank', 50, 'M', 5552468, 'Miami', 10002, 1, 161718);
INSERT INTO patient VALUES(17, 'Lebron', 28, 'F', 5553691, 'Florida', 10003, 2, 192021);
INSERT INTO patient VALUES(18, 'Henry', 65, 'M', 5557777, 'San Francisco', 10004, 3, 222324);

--select*from patient;

CREATE TABLE MEDICINE
( M_ID NUMBER (5),
M_NAME VARCHAR (20),
M_PRICE NUMBER (5),
D_ID NUMBER (5),

P_ID NUMBER (5),
CONSTRAINT PK_MEDICINE PRIMARY KEY(M_ID),
CONSTRAINT FK_MEDICINE FOREIGN KEY (D_ID) REFERENCES DOCTOR,

CONSTRAINT FK_MEDICINE_PATIENT FOREIGN KEY (P_ID) REFERENCES PATIENT);

INSERT INTO MEDICINE VALUES(1, 'Aspirin', 10, 10001, 11);
INSERT INTO MEDICINE VALUES(2, 'Tylenol', 8, 10002, 12);
INSERT INTO MEDICINE VALUES(3, 'Advil', 12, 10003, 13);
INSERT INTO MEDICINE VALUES(4, 'Zyrtec', 15, 10004, 14);
INSERT INTO MEDICINE VALUES(5, 'Nexium', 20, 10001, 15);
INSERT INTO MEDICINE VALUES(6, 'Lipitor', 30, 10002, 16);
INSERT INTO MEDICINE VALUES(7, 'Plavix', 25, 10003, 17);
INSERT INTO MEDICINE VALUES(8, 'Synthroid', 18, 10004, 18);

--select*from MEDICINE;

CREATE TABLE ROOM
( ROOM_NO NUMBER
(10),
ROOM_FEE NUMBER (10),
ROOM_TYPE VARCHAR (20),
CONSTRAINT PK_ROOM PRIMARY KEY(ROOM_NO));

INSERT INTO ROOM VALUES(1, 1500, 'AC');
INSERT INTO ROOM VALUES(2, 2250, 'Deluxe AC');
INSERT INTO ROOM VALUES(3, 800, 'NON AC');
INSERT INTO ROOM VALUES(4, 800, 'NON AC');
INSERT INTO ROOM VALUES(5, 1500, 'AC');
INSERT INTO ROOM VALUES(6, 2250, 'DELUXE AC');

--select*from ROOM;

CREATE TABLE LAB_REPORT
( REPORT_ID NUMBER (10),
TEST_NAME VARCHAR (20),

TEST_RESULT VARCHAR (10),
D_ID NUMBER (20),
P_ID NUMBER (20),

CONSTRAINT PK_REPORT PRIMARY KEY(REPORT_ID),
CONSTRAINT FK_REPORT FOREIGN KEY (D_ID) REFERENCES DOCTOR,
CONSTRAINT FK_REPORT_PATIENT FOREIGN KEY (P_ID) REFERENCES PATIENT);

INSERT INTO LAB_REPORT VALUES(101, 'Blood Test', 'Positive', 10001, 14);
INSERT INTO LAB_REPORT VALUES(102, 'Urine Test', 'Negative', 10002, 14);
INSERT INTO LAB_REPORT VALUES(103, 'X-Ray', 'Abnormal', 10003, 15);
INSERT INTO LAB_REPORT VALUES(104, 'CT Scan', 'Normal', 10004, 18);

--select*from LAB_REPORT;

CREATE TABLE AILMENT (
P_ID NUMBER (5),
A_NAME VARCHAR (50),
A_DETAIL VARCHAR (50),
CONSTRAINT PK_AILMENT PRIMARY KEY (P_ID, A_NAME),
CONSTRAINT FK_AILMENT FOREIGN KEY (P_ID) REFERENCES PATIENT);

INSERT INTO AILMENT VALUES(12, 'Headache', 'Mild headache due to dehydration');
INSERT INTO AILMENT VALUES(13, 'Stomachache', 'Indigestion and gas');
INSERT INTO AILMENT VALUES(14, 'Fever', 'High temperature and body ache');
INSERT INTO AILMENT VALUES(15, 'Allergy', 'Rash and itching due to pollen');
INSERT INTO AILMENT VALUES(17, 'Back pain', 'Muscle strain due to lifting heavy weight');
INSERT INTO AILMENT VALUES(18, 'Cold', 'Runny nose and cough');

--SELECT *FROM AILMENT;

CREATE TABLE BILL
( BILL_NO NUMBER (10), P_ID
REFERENCES PATIENT,
D_ID REFERENCES DOCTOR,
TOTAL_AMOUNT NUMBER (10),
CONSTRAINT PK_BILL PRIMARY KEY (P_ID, BILL_NO, D_ID));

INSERT INTO BILL VALUES(50, 11, 10001, 15000);
INSERT INTO BILL VALUES(170, 12, 10003, 10750);
INSERT INTO BILL VALUES(51, 13, 10002, 11000);
INSERT INTO BILL VALUES(150, 14, 10004, 12500);
INSERT INTO BILL VALUES(25, 15, 10005, 26000);
INSERT INTO BILL VALUES(20, 16, 10003, 28000);
INSERT INTO BILL VALUES(70, 17, 10005, 35000);
INSERT INTO BILL VALUES(60, 18, 10002, 19000);

--SELECT *FROM BILL;

CREATE TABLE TREATS
( D_ID NUMBER (5),
P_ID NUMBER (5),
CONSTRAINT FK1_TREATS FOREIGN KEY(D_ID) REFERENCES DOCTOR(D_ID),
CONSTRAINT FK2_TREATS FOREIGN KEY(P_ID) REFERENCES
PATIENT(P_ID), CONSTRAINT PK_TREATS PRIMARY KEY (D_ID, P_ID));

INSERT INTO TREATS VALUES(10001, 11);
INSERT INTO TREATS VALUES(10002, 12);
INSERT INTO TREATS VALUES(10003, 13);
INSERT INTO TREATS VALUES(10004, 14);
INSERT INTO TREATS VALUES(10002, 15);
INSERT INTO TREATS VALUES(10005, 16);
INSERT INTO TREATS VALUES(10003, 17);
INSERT INTO TREATS VALUES(10001, 18);

--SELECT*FROM TREATS;

CREATE TABLE LOOKS_AFTER
( N_ID NUMBER (5),
P_ID NUMBER (5),
CONSTRAINT FK_NP1 FOREIGN KEY(P_ID) REFERENCES
PATIENT(P_ID), CONSTRAINT FK_NP2 FOREIGN KEY(N_ID) REFERENCES
NURSE(N_ID), CONSTRAINT PK_LOOKS_AFTER PRIMARY KEY (N_ID, P_ID));

INSERT INTO LOOKS_AFTER VALUES(2,14);
INSERT INTO LOOKS_AFTER VALUES(3,15);

--SELECT*FROM LOOKS_AFTER;

CREATE TABLE MANAGES
( R_ID NUMBER (5),
P_ID NUMBER (5), D_ID
NUMBER (5),
BILL_NO NUMBER (10),
CONSTRAINT FK_MANAGES1 FOREIGN KEY(R_ID) REFERENCES RECEPTION(R_ID),
CONSTRAINT FK_MANAGESBILL FOREIGN KEY (BILL_NO, P_ID, D_ID) REFERENCES
BILL (BILL_NO, P_ID, D_ID),
CONSTRAINT PK_MANAGES PRIMARY KEY (BILL_NO, P_ID, R_ID, D_ID));

INSERT INTO MANAGES VALUES(1,11,10001,50);
INSERT INTO MANAGES VALUES(4,12,10003,170);
INSERT INTO MANAGES VALUES(1,13,10002,51);
INSERT INTO MANAGES VALUES(2,14,10004,150);
INSERT INTO MANAGES VALUES(3,15,10005,25);
INSERT INTO MANAGES VALUES(3,16,10003,20);
INSERT INTO MANAGES VALUES(5,17,10005,70);
INSERT INTO MANAGES VALUES(1,18,10002,60);

--SELECT*FROM MANAGES;

CREATE TABLE ADMITS
( ROOM_NO NUMBER (5),
P_ID NUMBER (5),
DATE_OF_ADMISSION VARCHAR(20),
CONSTRAINT FK_PRO1 FOREIGN KEY(P_ID) REFERENCES PATIENT(P_ID),
CONSTRAINT FK_PRO2 FOREIGN KEY(ROOM_NO) REFERENCES
ROOM(ROOM_NO), CONSTRAINT PK_ADMITS PRIMARY KEY (ROOM_NO, P_ID));

INSERT INTO ADMITS VALUES(1,15,'28-MAR-23');
INSERT INTO ADMITS VALUES(5,14,'27-FEB-23');

--SELECT*FROM ADMITS;

CREATE OR REPLACE TRIGGER room_availability
AFTER INSERT ON ROOM
FOR EACH ROW
DECLARE
 n integer;
 rtype varchar(10):='AC';
BEGIN
  SELECT count(*) into n from ROOM
  WHERE ROOM_TYPE=rtype;
  IF n=0 THEN
     dbms_output.put_line('No '||rtype||' Rooms available');
  ELSE
     dbms_output.put_line(n||' '||rtype||' Rooms available');
  END IF;
END;

DECLARE
 CURSOR C2 IS
    SELECT P_NAME,P_AGE,D_NAME
    FROM PATIENT,DOCTOR,TREATS
    WHERE PATIENT.P_ID=TREATS.P_ID AND TREATS.D_ID=DOCTOR.D_ID
    ORDER BY P_AGE DESC;
 REC C2%ROWTYPE;
BEGIN
  OPEN C2;
  LOOP
      FETCH C2 INTO REC;
      EXIT WHEN C2%NOTFOUND;
      dbms_output.put_line('Patient''s name: '||REC.P_NAME);
      dbms_output.put_line('Patient''s age: '||REC.P_AGE);
      dbms_output.put_line('Doctor''s name: '||REC.D_NAME);
      dbms_output.new_line;
  END LOOP;
END;

DECLARE
 CURSOR C3 IS
    SELECT P_NAME,P_CITY
    FROM PATIENT
    WHERE P_CITY = (SELECT D_CITY FROM DOCTOR WHERE D_ID=10002);
 REC1 C3%ROWTYPE;
BEGIN
  OPEN C3;
  LOOP
      FETCH C3 INTO REC1;
     
      EXIT WHEN C3%NOTFOUND;
      dbms_output.put_line('Patient''s Name: '||REC1.P_NAME);      
      dbms_output.put_line('City: '||REC1.P_CITY);
      dbms_output.new_line; 
      
  END LOOP;
END;

DECLARE
CURSOR C4 IS
SELECT D_NAME FROM DOCTOR
WHERE D_ID IN (
SELECT D_ID FROM TREATS
WHERE P_ID IN(
SELECT P_ID FROM ADMITS
WHERE DATE_OF_ADMISSION BETWEEN '01-FEB-23' AND '28-FEB-23'));
REC2 C4%ROWTYPE;
BEGIN
OPEN C4;
LOOP
FETCH C4 INTO REC2;
EXIT WHEN C4%NOTFOUND;
dbms_output.put_line('Doctor''s Name: '||REC2.D_NAME); dbms_output.new_line;
END LOOP;
END;

DECLARE
CURSOR C5 IS
SELECT D_ID, COUNT(P_ID) AS No_Of_Patients
FROM PATIENT
GROUP BY D_ID
HAVING COUNT(P_ID)>1;
REC3 C5%ROWTYPE;
BEGIN
OPEN C5;
LOOP
FETCH C5 INTO REC3;
EXIT WHEN C5%NOTFOUND;
dbms_output.put_line('Doctor''s ID: '||REC3.D_ID||', Number of patient''s: '||REC3.No_Of_Patients); 
END LOOP;
END;

DECLARE
CURSOR C6 IS
SELECT ROOM_NO FROM ROOM
WHERE ROOM_NO NOT IN(
SELECT ROOM_NO FROM ADMITS);
REC4 C6%ROWTYPE;
BEGIN
OPEN C6;
LOOP
FETCH C6 INTO REC4;
EXIT WHEN C6%NOTFOUND;
dbms_output.put_line ('Room '||REC4. ROOM_NO||' is unoccupied');
END LOOP;
END;